import java.util.Random;

public class Test {
	public static void main(String[] args) throws Exception {
		Random rand = new Random();
		int priority, val, universe;
		Integer[] list = new Integer[16];
		
		
		int u = 1024;

		for (int i = 0; i < n i++) {
			priority = rand.nextInt(universe);
			val = rand.nextInt(universe);
			while (contains(list, priority)) {
				priority = rand.nextInt(universe);
				val = rand.nextInt(universe);
			}
			list[val] = priority;
		}
		
		//System.out.println("k = " + k + ", highsqrt:" + highSqRt(k) + "* lowsqrt:" + lowSqRt(k) + " = "
//				+ highSqRt(k) * lowSqRt(k));

		vEBtreePriorityQueue bhqueue = new vEBtreePriorityQueue(u, list);

		for (int i = 0; i < list.length; i++) {
			System.out.println(bhqueue.ExtractMax());
		}

	}

	private static Double highSqRt(Double x) {
		System.out.println(Math.ceil(log2(x) / 2));
		return Math.pow(2, Math.ceil(log2(x) / 2));
	}

	private static Double lowSqRt(Double x) {
		return Math.pow(2, Math.floor(log2(x) / 2));
	}

	private static Double log2(Double x) {
		return Math.log10(x) / Math.log10(2);
	}
	
	private static Boolean contains(Integer[] a, Integer x) {
		for (int i = 0; i < a.length; i++) {
			if (a[i] == x)
				return true;
		}
		return false;
	}
}
